/* EM is relative to the parent element's font size, so if you wish to scale the element's size based on its parent's size, use EM. REM is relative to the root (HTML) font size, so if you wish to scale the element's size based on the root size, no matter what the parent size is, use REM. */

* {
    box-sizing: border-box;
  }
  
  html {
    font-size: 16px;
  }
  
  body {
    font-family: 'Open Sans', sans-serif;
  }
  
  .label {
    border: 2px solid black;
    width: 270px;
    margin: 20px auto;
    padding: 0 7px;
  }

  /* The letter-spacing property can be used to adjust the space between each character (horizontally) of text in an element. */

  header h1 {
    text-align: center;
    margin: -4px 0;
    letter-spacing: 0.15px
  }
  
  p {
    margin: 0;
    display: flex;
    justify-content: space-between;
  }
  
  .divider {
    border-bottom: 1px solid #888989;
    margin: 2px 0;
  }
  
  .bold {
    font-weight: 800;
  }
  
  .large {
    height: 10px;
  }
  
  .large, .medium {
    background-color: black;
    border: 0;
  }
  
  .medium {
    height: 5px;
  }
  /* The rem unit stands for root em, and is relative to the font size of the html element. 
  Create a .small-text selector and set the font-size to 0.85rem, which would calculate to roughly 13.6px (remember that you set your html to have a font-size of 16px).*/
  .small-text {
    font-size: 0.85rem;
  }
  
  
  .calories-info {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }
  
  .calories-info h2 {
    margin: 0;
  }
  
  .left-container p {
    margin: -5px -2px;
    font-size: 2em;
    font-weight: 700;
  }
  
  /* Give your .calories-info span selector a margin set to -7px -2px. This will shift your 230 text into place. Otherwise, it's floating.*/
  .calories-info span {
    margin: -7px -2px;
    font-size: 2.4em;
    font-weight: 700;
  }
  
  .right {
    justify-content: flex-end;
  }
  
  .indent {
    margin-left: 1em;
  }
  
  .double-indent {
    margin-left: 2em;
  }
  /* 

The :not pseudo-selector can be used to select all elements that do not match the given CSS rule.

div:not(#example) {
  color: red;
}

The above selects all div elements without an id of example.

Modify your .daily-value p selector to exclude the .no-divider elements.
 */
  .daily-value p:not(.no-divider) {
    border-bottom: 1px solid #888989;
  }
  
  .note {
    font-size: 0.6rem;
    margin: 5px 0;
  }